int main()
{
	int i = 0;
	int count = 0;
	int arr[100001] = { 0 };
	int m = 0;
	int n = 0;
	int j = 0;
	int cnt = 0;
	int sum = 0;
	scanf_s("%d", &n);
	for (i = 0; i <= n; i++)
	{
		m = i;
		cnt = 0;
		sum = 0;
		while (m)
		{
			m /= 10;
			cnt++;
		}
		m = i;
		for(j=1;j<=cnt;j++)
		{
			arr[j] = m % 10;
			m /= 10;
			sum += pow(arr[j], cnt);
		}
		if (sum == i)
			printf("%d ", i);
	}
	return 0;
}
int main()
{
	int i = 0;
	int n = 0;
	scanf_s("%d", &n);
	int mid = (n / 2)+1;
	int right = 0;
	int left = 0;
	int j = 0;
	int m = 0;
	int t = 0;
	int cnt = 0;
	for (i = 1; i <= mid; i++)
	{
		m = i;
		for (j = 1; j <= n; j++)
		{
			right = mid+m-1;
			left = mid-m+1;
				if (j <= right && j >= left)
				{
					printf("*");
				}
				else
					printf(" ");
		}
		printf("\n");
	}
	for (t = mid; t <= n; t++)
	{
		for (j = 1; j <= n; j++)
		{
			right = n-cnt-1;
			left = t - n / 2 + 1;
			if (j <= right && j >= left)
				printf("*");
			else
				printf(" ");
		}
		printf("\n");
		cnt++;
		if (cnt == (n / 2))
			break;
	}
	return 0
}
