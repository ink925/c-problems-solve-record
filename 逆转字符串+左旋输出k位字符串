//reverse string without tap on space
void my_strr(char* a, int ret)
{
	int i = ret;
	for (i = ret; i >= 0; i--)
	{
		printf("%c", a[i]);
	}
}
int my_strlen(char* s)
{
	int count = 0;
	while (*s != '\0')
	{
		count++;
		s++;
	}
	return count;
}
int main() {
	char a[10001] = { 0 };
	scanf_s("%s", &a, 10001);
	char* pa = &a;
	int ret = my_strlen(pa);
	my_strr(pa, ret);

	return 0;
}
//reverse strlen!!!!!complted version
#include <string.h>
#include <stdio.h>
int main()
{
char a[1254]={'0'};
while(gets(a))
int ret = strlen(a);
int i = 0;
for(i=ret-1;i>=0;i++)
{
printf("%d",a[i]);
}

return 0;
}
//接下来是左旋输出字符串
void transtr(char* pa, int n,int ret)
{
	int i = 0;
	for (i = n; i <= ret; i++)
	{
		printf("%c", pa[i]);
	}
	for (i = 0; i < n; i++)
	{
		printf("%c", pa[i]);
	}
}
int my_strlen(char* pa)
{
	int cnt = 0;
	while (*pa != '\0')
	{
		cnt++;
		pa++;
	}
	return cnt;
}
int main()
{
	int n = 0;
	char a[100] = { 0 };
	scanf_s("%d", &n);
	scanf_s("%s", &a, 100);
	char* pa = &a;
	int ret = my_strlen(pa);
	transtr(pa, n,ret);
}
